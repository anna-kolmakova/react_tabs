{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","onTabSelected","tabs","selectedTabId","getSelectedTab","find","tab","id","className","map","classNames","href","onClick","handleClick","title","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAACC,GACpC,IACEC,EAGED,EAHFC,cACAC,EAEEF,EAFFE,KACAC,EACEH,EADFG,cAGIC,EAAiBF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAUnD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKK,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAH,GACR,OACE,oBAEEE,UAAWE,IACT,CAAE,YAAaP,IAAkBG,EAAIC,KAEvC,UAAQ,MALV,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBAxBL,SAACN,GACnB,OAAIH,IAAkBG,EAAIC,GACjBN,EAAcK,GAGhB,KAmBsBO,CAAYP,IAH7B,SAKGA,EAAIQ,SAXFR,EAAIC,WAmBnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,GAAkBA,EAAeW,cC9C7Bb,EAAO,CAClB,CAAEK,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASf,EAAK,IAApD,mBAAOgB,EAAP,KAAoBC,EAApB,KAGEZ,EAEEW,EAFFX,GACAO,EACEI,EADFJ,MAOF,OACE,sBAAKN,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBM,KAEtB,cAAC,EAAD,CACEb,cAVkB,SAACK,GACvBa,EAAeb,IAUXJ,KAAMA,EACNC,cAAeI,QC9BvBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.47cc87bf.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/tab';\n\ntype Props = {\n  onTabSelected: (tab: Tab) => void;\n  tabs: Tab[];\n  selectedTabId: string;\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const {\n    onTabSelected,\n    tabs,\n    selectedTabId,\n  } = props;\n\n  const getSelectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  const handleClick = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      return onTabSelected(tab);\n    }\n\n    return null;\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            return (\n              <li\n                key={tab.id}\n                className={classNames(\n                  { 'is-active': selectedTabId === tab.id },\n                )}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleClick(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {getSelectedTab && getSelectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const {\n    id,\n    title,\n  } = selectedTab;\n\n  const handleSelectTab = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${title}`}\n      </h1>\n      <Tabs\n        onTabSelected={handleSelectTab}\n        tabs={tabs}\n        selectedTabId={id}\n      />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}